version: "3.9"

services:
  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Test123!
      - GRAFANA_TOKEN=${GRAFANA_TOKEN}
      - K6_TEST_START=${TEST_START}
      - GRAFANA_URL=http://grafana:3000
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    environment:
      - PROMETHEUS_TOKEN=${PROMETHEUS_TOKEN}
    env_file:
      - .env
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules/startup.rules.yml:/etc/prometheus/rules/startup.rules.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  #  gcp-sql-proxy:
  #    image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.15.2-alpine
  #    container_name: gcp-sql-proxy
  #    command:
  #      - "--debug"
  #      - "--address=0.0.0.0"
  #      - "--port=5432"
  #      - "--credentials-file=/secrets/gcp- .json"
  #      - "${GCP_PROJECT_ID}:${GCP_REGION}:${GCP_PROJECT_DB_NAME}"
  #      - "--prometheus"
  #    volumes:
  #      - ./terraform_deploys/gcp/gcp-credentials.json:/secrets/gcp-credentials.json:ro
  #    ports:
  #      - "5432:5432"
  #      - "9104:9104"

  #  postgres_exporter-proxy:
  #    image: wrouesnel/postgres_exporter
  #    depends_on:
  #      - gcp-sql-proxy
  #    env_file:
  #      - .env
  #    environment:
  #      DATA_SOURCE_NAME: "postgresql://${GOOGLE_POSTGRESQL_USERNAME}:${GOOGLE_POSTGRESQL_PASSWORD}@gcp-sql-proxy:5432/${GOOGLE_POSTGRESQL_NAME}?sslmode=disable"
  #    ports:
  #      - "9187:9187"
  #TODO zweryfikować paramety pozyskiwane przez oba eksportery np interval co ile 1m, jakie metryki
  stackdriver-exporter-gcp:
    image: quay.io/prometheuscommunity/stackdriver-exporter:latest
    restart: unless-stopped
    # TODO ustalić konktetne zmienne nie cały plik
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/stackdriver/gcp-credentials.json
    command:
      - --google.project-id=${GCP_PROJECT_ID}
      - --monitoring.metrics-prefixes=run.googleapis.com/container/cpu/usage
      - --monitoring.metrics-prefixes=run.googleapis.com/container/cpu/utilizations
      - --monitoring.metrics-prefixes=run.googleapis.com/container/memory/usage
      - --monitoring.metrics-prefixes=run.googleapis.com/container/memory/utilizations
      - --monitoring.metrics-prefixes=run.googleapis.com/container/network/received_bytes_count
      - --monitoring.metrics-prefixes=run.googleapis.com/container/network/sent_bytes_count
      - --monitoring.metrics-prefixes=run.googleapis.com/container/instance_count
      - --monitoring.metrics-prefixes=run.googleapis.com/container/startup_latencies
      - --monitoring.metrics-interval=1m
      - --monitoring.metrics-offset=1m
      - --web.listen-address=:8080
    volumes:
      - ./terraform_deploys/gcp/gcp-credentials.json:/etc/stackdriver/gcp-credentials.json:ro
    ports:
      - "8080:8080"
    depends_on:
      - prometheus
      - grafana

  azure-metrics-exporter:
    image: webdevops/azure-metrics-exporter:latest
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - LOG_DEVEL=true
    depends_on:
      - prometheus
      - grafana

  k6-base: &common
    build:
      context: ./load-tests
      dockerfile: Dockerfile
    depends_on:
      - prometheus
      - grafana
    deploy:
      resources:
        limits:
          cpus: "4.0"
          memory: 4G
    environment:
      - K6_OUT=experimental-prometheus-rw
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_HISTOGRAM=false
      - K6_SUMMARY_TREND_STATS=avg,min,max,p(50),p(95),p(99)
      - K6_PROMETHEUS_LABELS=cloud=azure
      - GRAFANA_URL=http://grafana:3000
      - BREAK_BETWEEN_SETS=3
      - BREAK_BETWEEN_TESTS=1
      #token k6, id dashboardów
      - GRAFANA_TOKEN=${GRAFANA_K6_TOKEN}
      - DASHBOARD_IDS_TO_ANNOTATE=4,7
    volumes:
      - ./load-tests/tests/:/tests
    command: ["run", "/tests/ecommerce-test.ts"]
    profiles: ["loadtests"]

  k6-gcp-low:
    extends: { service: k6-base }
    environment:
      - BASE_URL=
      - RUN_ID=${RUN_ID_GCP_LOW}
      - K6_TAGS=testid:${RUN_ID_GCP_LOW}
      - CLOUD_PROVIDER=gcp

  k6-gcp-medium:
    extends: { service: k6-base }
    environment:
      - BASE_URL=
      - RUN_ID=${RUN_ID_GCP_MEDIUM}
      - K6_TAGS=testid:${RUN_ID_GCP_MEDIUM}
      - CLOUD_PROVIDER=gcp

  k6-gcp-high:
    extends: { service: k6-base }
    environment:
      - BASE_URL=
      - RUN_ID=${RUN_ID_GCP_HIGH}
      - K6_TAGS=testid:${RUN_ID_GCP_HIGH}
      - CLOUD_PROVIDER=gcp

  k6-azure-low:
    extends: { service: k6-base }
    environment:
      - BASE_URL=https://low-r405e.bluesmoke-4e360ff2.polandcentral.azurecontainerapps.io
      - RUN_ID=${RUN_ID_AZURE_LOW}
      - K6_TAGS=testid:${RUN_ID_AZURE_LOW}
      - CLOUD_PROVIDER=azure

  k6-azure-medium:
    extends: { service: k6-base }
    environment:
      - BASE_URL=https://medium-r405e.bluesmoke-4e360ff2.polandcentral.azurecontainerapps.io
      - RUN_ID=${RUN_ID_AZURE_MEDIUM}
      - K6_TAGS=testid:${RUN_ID_AZURE_MEDIUM}
      - CLOUD_PROVIDER=azure

  k6-azure-high:
    extends: { service: k6-base }
    environment:
      - BASE_URL=https://high-r405e.bluesmoke-4e360ff2.polandcentral.azurecontainerapps.io
      - RUN_ID=${RUN_ID_AZURE_HIGH}
      - K6_TAGS=testid:${RUN_ID_AZURE_HIGH}
      - CLOUD_PROVIDER=azure

volumes:
  grafana_data: {}
  prometheus_data: {}
